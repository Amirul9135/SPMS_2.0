<style>
    button * {
        pointer-events: none;
    }
</style>

<div class="side-app" onload="setup()">

    <div id="ejsData" data-curclass="<%= JSON.stringify(classData) %> "></div>

    <div class="row">
        <div class="col-md-10 col-xl-10">
            <h1 class="page-title mb-6" style="font-size: 30px;">Class Details</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-7 col-lg-7 col-xl-7">
            <div class="card banner">
                <div class="card-body">
                    <div class="text-left text-white mt-xl-4">
                        <h4 class="font-weight-normal" id="teacherName"></h4>
                        <p class="mb-lg-0 text-white" id="schoolName"></p>
                        <p class="mb-lg-0 text-white" id="className"></p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-lg-3 col-xl-3">
            <div class="card banner">
                <div class="card-body">
                    <div class="text-center text-white mt-xl-4">
                        <h4 class="font-weight-normal">TOTAL STUDENTS:</h4>
                        <h3 class="font-weight-normal" id="total"></h3>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-2 col-lg-2 col-xl-2">
            <div class="card banner">
                <div class="card-body">
                    <div class="text-center text-white mt-xl-4">
                        <h4 class="font-weight-normal">YEAR:</h4>
                        <h3 class="font-weight-normal" id="year"></h3>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Student List</h3>
                    <div class="card-options">
                        <button type="button" class="btn btn-orange btn-sm ml-2" onclick="deleteList();">
                            <i class="fa fa-trash"><b style="font-family: sans-serif;">&nbsp;List</b></i>
                        </button>

                        <button type="button" class="btn btn-primary btn-sm ml-2" data-toggle="modal"
                            onclick="tableStudent();">
                            <i class="fa fa-plus mr-2"><b style="font-family: sans-serif;">&nbsp;Student</b></i>
                        </button>
                    </div>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover text-nowrap mb-0" id="dtbClassStudents">
                                    <thead class="bg-primary">
                                        <tr>
                                            <th width="15%" class="text-white text-center">ID</th>
                                            <th width="50%" class="text-white">Name</th>
                                            <th width="10%" class="text-white text-center">Age</th>
                                            <th width="15%" class="text-center text-white">Registered Date</th>
                                            <th width="10%" class="text-white text-center">Delete</th>
                                        </tr>
                                    </thead>
                                    <tbody class="mycustom_tbd">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_addStudents" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content modal-md">
            <div class="modal-header bg-info">
                <h5 class="modal-title text-white" id="exampleModalLabel">Class Registration</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-xl-12">
                    </div>

                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover text-nowrap mb-0" id="StudTable">
                                <thead class="bg-primary">
                                    <tr>
                                        <th width="50%" class="text-white">Student Name</th>
                                        <th width="20%" class="text-center text-white">Class</th>
                                        <th width="10%" class="text-center text-white">Add</th>
                                    </tr>
                                </thead>
                                <tbody class="mycustom_tbd">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer text-white" style="justify-content: center;">
                <a class="btn btn-warning mt-1" data-dismiss="modal">Close</a>
            </div>
        </div>
    </div>
</div>

<script>
    var classData
    var dtbClassStudents
    var tableStud
    var studId

    function setup() {
        console.log('st')
        ejsData = JSON.parse(JSON.stringify(document.getElementById("ejsData").dataset))

        document.getElementById("ejsData").remove()
        classData = JSON.parse(ejsData.curclass)
        console.log(classData)

        dtbClassStudents = new DataTable('#dtbClassStudents', {
            "columnDefs": [{
                "targets": [2, 3],
                "searchable": false
            },
            {
                "targets": [0, 2, 3, 4],
                "targets": [0, 2, 3, 4],
                "className": "text-center"
            }
            ]
        })

        tableStud = new DataTable('#StudTable', {
            "columnDefs": [{
                "targets": [1, 2],
                "className": "text-center"
            }
            ]
        })
        loadClassStudent();
        showTeacher();
    }

    function showId(event) {
        alert(event.target.id);
    }


    async function register(event) {
        var action = await Swal.fire({
            type: 'question',
            title: 'Confirm Registration',
            text: 'Register new student into the class?',
            showCancelButton: true
        })
        if (action.dismiss) {
            return;
        }

        var classId = JSON.stringify(classData.classId);

        var data = {
            "classId": classId,
            "studentId": event.target.id
        }

        Server.request("POST", "/api/class/registerStudent", data, true).then(function (value) {
            console.log(value)

            loadStudent();
            loadClassStudent();

        }).catch(async function (value) {
            if (value == 'duplicate')
                Swal.fire({
                    type: 'error',
                    title: 'Student Already Registered!',
                    text: '',
                    showCancelButton: true
                })
            console.log(value)

        })
    }

    function loadClassStudent() {
        console.log("load");

        classId = JSON.stringify(classData.classId);
        var data = {
            "classId": classId
        }


        Server.request("POST", "/api/class/getClassStudent", data, false).then(function (value) {

            var data = JSON.parse(value);
            dtbClassStudents.clear();

            if (data == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No data',
                    text: 'Currently There is no student in selected class'
                })
            }

            var tmpRow;

            data.forEach(qClassStud => { //temporary
                tmpRow = dtbClassStudents.row.add([
                    qClassStud.studentId,
                    qClassStud.name,
                    qClassStud.age,
                    new Date(qClassStud.rDate).toLocaleDateString('en-GB'),
                    '<button class="btn btn-danger" style="vertical-align: middle;" onclick="deleteStudent(event);" id="' + qClassStud.studentId + '"><b><i class="fa fa-trash" style="font-size: 17px;"></i></b></button>'
                ]).node()
                tmpRow.id = qClassStud.studentId; //letak id 
            })
            dtbClassStudents.draw();
            console.log(data)
        }
        ).catch(function (value) {
            console.log(value);
        });
    }


    function showTeacher() {
        var classId = JSON.stringify(classData.classId);

        var data = {
            "classId": classId
        }

        Server.request("POST", "/api/class/getClassTeacher", data, true).then(function (value) {
            console.log(value);
            var data = JSON.parse(value);

            var teacherName;
            var className;
            var schoolName;
            var year;
            var total;

            data.forEach(teacher => { //temporary
                teacherName = teacher.name;
                className = teacher.className;
                schoolName = teacher.schoolName;
                year = teacher.year;
                total = teacher.total;
            })

            document.getElementById('teacherName').innerHTML = teacherName;
            document.getElementById('schoolName').innerHTML = schoolName;
            document.getElementById('className').innerHTML = className;
            document.getElementById('total').innerHTML = total;
            document.getElementById('year').innerHTML = year;

        }).catch(async function (value) {


        })
    }

    async function deleteStudent(event) {
        var action = await Swal.fire({
            type: 'question',
            title: 'Confirm Delete?',
            text: 'This student will be removed from the system and cannot add this student in same class anymore ',
            showCancelButton: true
        })
        if (action.dismiss) {
            return;
        }

        var classId = JSON.stringify(classData.classId);
        var data = {
            "studentId": event.target.id,
            "classId": classId
        }

        Server.request("POST", "/api/class/deleteStudent", data, false).then(async function (value) {
            var action = await Swal.fire({
                type: 'success',
                title: 'Deleted Successfully!',
                text: 'You need to wait one day to add this student!',
                showCancelButton: false
            })

            loadClassStudent();

        }).catch(async function (value) {
            var action = await Swal.fire({
                type: 'error',
                title: 'Cannot Deleted!',
                text: 'An Error has occured',
                showCancelButton: false
            })
        })

    }

    function tableStudent() {
        loadStudent();
    }

    function loadStudent() {
        console.log("load")

        $('#modal_addStudents').modal('show');

        //var classId = JSON.stringify(classData.classId);
        var school = JSON.stringify(classData.schoolId);

        console.log(school);

        var data = {
            "schoolId": school
        }

        Server.request("POST", "/api/class/getStudent", data, true).then(function (value) {
            var data = JSON.parse(value);
            tableStud.clear();

            if (data.length == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No data',
                    text: 'Currently There is no student in selected class'
                })
            }

            var tmpRow;
            data.forEach(student => { //temporary
                tmpRow = tableStud.row.add([
                    student.name + '<br><span>' + student.studentId + '</span>',
                    student.className,
                    '<button class="btn btn-success" style="vertical-align: middle;" onclick="register(event);" id="' + student.studentId + '"><b><i class="fa fa-plus" style="font-size: 17px;"></i></b></button>'

                ]).node()
                tmpRow.id = student.studentId; //letak id

            })
            tableStud.draw();
            console.log(data)
        }
        ).catch(function (value) {
            console.log(value);
        });
    }

    async function deleteList() {
        var action = await Swal.fire({
            type: 'question',
            title: 'Confirm Delete?',
            text: 'All student will be removed from this list',
            showCancelButton: true
        })
        if (action.dismiss) {
            return;
        }

        var classId = JSON.stringify(classData.classId);
        var data = {
            "classId": classId
        }

        Server.request("POST", "/api/class/deleteStudentList", data, false).then(async function (value) {
            var data = JSON.parse(value);
            dtbClassStudents.clear();

            if (data.length == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No data',
                    text: 'Currently There is no student in selected class'
                })
            }

            var action = await Swal.fire({
                type: 'success',
                title: 'Deleted All Student Successfully!',
                text: '',
                showCancelButton: false
            })

            loadClassStudent();

        }).catch(async function (value) {
            var action = await Swal.fire({
                type: 'error',
                title: 'Cannot Deleted!',
                text: 'An Error has occured',
                showCancelButton: false
            })
        })
    }

</script>