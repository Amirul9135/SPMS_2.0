<style>
    .btnPrint {
        position: fixed;
        bottom: .5vh;
        right: .5vw;
        z-index: 2;
    }

    .btnPrint:hover {
        color: white;
    }

    .modal-xl {
        max-width: 80%;
    }
</style>
<div class="side-app" onload="setup()">
    <button onclick="testFunc()">test</button>

    <button class="btnPrint btn btn-pill btn-outline-danger" type="button" onclick="printReport(event)">
        <i class="fa fa-file-pdf-o" aria-hidden="true"></i>&nbsp; Save PDF
    </button>
    <div id="ejsData"></div>
    <div class="row">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h3 class="card-title">
                    Report Configuration
                </h3>
                <div class="card-options ">
                    </button><i class="fe fe-chevron-up text-white" onclick="toggle_card(event)"></i>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row text-center mt-1" style="justify-content: center;">
                            <button class="btn btn-pill btn-outline-primary" data-toggle="modal"
                                data-target="#ModalAreaInput"><i class="fa fa-plus" aria-hidden="true"></i> Data by
                                Specific Area</button>
                            <button class="btn btn-pill btn-outline-primary" data-toggle="modal"
                                data-target="#ModalAddSchool"><i class="fa fa-plus" aria-hidden="true"></i> Data by
                                School</button>
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <div class="card">
            <div class="card-header bg-info text-white">
                <h3 class="card-title">
                    Performance Analysis
                </h3>
                <div class="card-options ">
                    </button><i class="fe fe-chevron-up text-white" onclick="toggle_card(event)"></i>
                </div>
            </div>
            <div class="card-body">

                <div class="col-md-12 mt-5" style="justify-content: center;">
                    <div id="LineChart" style="height: 80vh;width: 100%;"></div>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="ModalAreaInput" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title w-100">
                    Load Area Specific Student Performance Data
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <div class="row">

                        <div class="col-md-4">
                            <label for="exampleInputnumber">State</label>
                            <select id="selectState" class="form-control select2" onchange="changeState(event)">
                                <option value="-1">Choose State</option>
                                <% states.forEach(state=> {%>
                                    <option value="<%= state['state_code']%>">
                                        <%=state["state_name"]%>
                                    </option>
                                    <%});%>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="exampleInputnumber">Postcode</label>

                            <div class="select-search">
                                <input id="SSPostcode" type="text" autocomplete="off" disabled class="form-control"
                                    data-list="idListPostcode" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                    onblur="SSFocus(event)" onplay="changePostcode(event)">
                                <ul onclick="SSItemClick(event)" id="idListPostcode" data-selected="-1">
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="exampleInputnumber">Area</label>
                            <div class="select-search">
                                <input id="SSArea" type="text" autocomplete="off" disabled class="form-control"
                                    data-list="idListArea" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                    onblur="SSFocus(event)">
                                <ul onclick="SSItemClick(event)" id="idListArea" data-selected="-1">
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-4">
                            <label class="form-label">
                                Subject
                            </label>
                            <div class="select-search">
                                <input id="selectSubject" type="text" class="form-control" data-list="idListSubj"
                                    onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)" onblur="SSFocus(event)"
                                    onchange="resetChartData()">
                                <ul onclick="SSItemClick(event)" id="idListSubj" data-selected="-1">
                                    <% subjects.forEach(subj=> {%>
                                        <li id="<%= subj['subjectCode']%>">
                                            <%=subj["title"]%>
                                        </li>
                                        <%});%>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Year</label>
                            <select class="form-control MyYearSelect" id="selYear">
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer text-center" style="justify-content: center;">
                <button class="btn btn-pill btn-outline-info" onclick="loadNewAreaData()">
                    <i class="fa fa-plus" aria-hidden="true"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalAddSchool" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title w-100">
                    Load Per School Analysis Data
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="card">
                    <div class="card-header text-white bg-info">
                        <h3 class="card-title">Find School</h3>
                        <div class="card-options">
                            <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i
                                    class="fe fe-chevron-up text-white"></i></a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label mt-0">State</label>
                                    <select id="selectState" class="form-control select2"
                                        onchange="changeStateSchool(event)">
                                        <option value="-1">Choose State</option>
                                        <% states.forEach(state=> {%>
                                            <option value="<%= state['state_code']%>">
                                                <%=state["state_name"]%>
                                            </option>
                                            <%});%>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label mt-0">County</label>
                                    <select id="selectCounty" class="form-control select2">

                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="form-label mt-0">&nbsp;</label>
                                            <button onclick="loadSchool()" class="btn btn-pill btn-info-light"><b><i
                                                        class="fa fa-search">&nbsp;Search</i></b>

                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">List of School</h3>
                    </div>

                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover text-nowrap mb-0" id="SchoolTable">
                                <thead class="bg-primary">
                                    <tr>
                                        <th width="70%" class="text-white">School Name</th>
                                        <th width="20%" class="text-center text-white">Abbreviation</th>
                                        <th width="10%" class="text-white">Load</th>
                                    </tr>
                                </thead>
                                <tbody class="mySchool_tbd">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="/res/assets/plugins/bootstrap-daterangepicker/moment.min.js"></script>
<script src="/res/assets/plugins/bootstrap-daterangepicker/daterangepicker.js"></script>
<script src="/res/assets/plugins/date-picker/jquery-ui.js"></script>
<script src="/res/script/echarts.min.js"></script>
<script>
    $('input[name="daterange"]').daterangepicker({
        startDate: new Date(), // after open picker you'll see this dates as picked
        endDate: new Date(),
        maxDate: new Date(),
        locale: {
            format: 'DD/MM/YYYY'
        }
    }, function (start, end, label) {
        if (start.year() == end.year()) {
            if (start.month() == end.month()) {
                Swal.fire({
                    type: 'error',
                    title: 'Invalid Month',
                    text: 'Start and end of month range cannot be same'
                })
                return
            }
        }
        resetChartData()
    });

    function yearSelector() {
        var strhtml = ""
        var i = new Date().getFullYear()
        console.log(i)
        while (i > 2000) {

            strhtml += '<option value="' + i.toString() + '">' + i.toString() + '</option>'
            console.log(i)
            i--
        }
        console.log(strhtml)
        //     for (var i = new Date().getFullYear(); i >= 2000; i--) {
        //        strhtml += '<option value="' + i + "'>" + i + '</option>'
        //   strhtml.trim()
        //   }
        document.querySelectorAll(".MyYearSelect").forEach(sel => {
            console.log(sel)
            sel.innerHTML = strhtml
        })
    }

    function loadNewAreaData() {
        var areaId = document.getElementById('idListArea').dataset.selected
        var areaname = document.getElementById('SSArea').value
        if (areaId == '-1') {
            Message.createNew('Invalid Area id', '', 3)
            return
        }
        var subjcode = document.getElementById('idListSubj').dataset.selected
        if (subjcode == '-1') {
            Message.createNew('No subject Selected', '', 3)
            return
        }
        var year = document.getElementById('selYear').value
        console.log(year)
        Server.request('GET', '/api/assessment/areaReport?areaId=' + areaId + '&subjCode=' + subjcode + '&year=' + year, null, true).then(function (result) {
            result = JSON.parse(result)
            console.log(result)
            if (result.length == 0) {
                return
            }
            let converted = []
            result.forEach(res => {
                converted.push([res.date, res.percent * 100])
            })
            let newData = newSeries(areaname, converted, subjcode)
            lineChartOption.series.push(newData)
            LineChart.setOption(lineChartOption)
            console.log(converted)
        }).catch(function (err) {
            console.log(err)
            try {
                err = JSON.parse(err)
                if (err.error == "no data") {
                    Swal.fire({
                        type: 'warning',
                        title: 'No record meets the criteria'
                    })
                }
            } catch {

            }
        })


    }
    var ii = 0
    function testFunc() {
        ii++
        var newt = newSeries('btn' + ii, data3)
        lineChartOption.series.push(newt)
        LineChart.setOption(lineChartOption)
        console.log(LineChart.getModel().getSeries().map(s => {
            return {
                seriesIndex: s.seriesIndex,
                seriesColor: LineChart.getVisual({
                    seriesIndex: s.seriesIndex
                }, 'color')
            }
        }))
    }
    var LineChart;

    function setup() {
        LineChart = echarts.init(document.getElementById('LineChart'))
        redrawChart()
        $("#datepicker").datepicker({
            format: "yyyy",
            viewMode: "years",
            minViewMode: "years"
        });

        tableSchool = new DataTable("#SchoolTable", {
            // options 
            "columnDefs":
                [
                    { "targets": [2], "className": "text-center" },
                    { "targets": [2], "orderable": false, "searching": false }
                ]
        });
        yearSelector()
    }

    //school
    function changeStateSchool(e) {
        console.log('ss')
        if (e.target.value == '-1') {
            return;
        }
        Server.request('GET', '/api/address/county?stateCode=' + e.target.value, null, true).then(function (result) {
            result = JSON.parse(result)
            console.log(result)
            let strhtml = ""
            result.forEach(c => {
                strhtml += '<option value="' + c.countyId + '">' + c.name + '</option>'
            })
            document.getElementById('selectCounty').innerHTML = strhtml
        }).catch(function (err) {
            Message.createNew('Eror', 'Failed to recieve county list', 3)
            console.log(err)
        })
    }


    function loadSchool() {
        var countyId = document.getElementById('selectCounty').value
        if (!countyId) {
            Swal.fire({
                type: 'error',
                title: 'no county selected'
            })
        }
        Server.request("GET", "/api/school/county?id=" + countyId, null, true).then(function (value) {
            var data = JSON.parse(value);
            console.log(data)

            if (data.length == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No Data',
                    text: "There's no existing school data in selected county"
                })
            }
            tableSchool.clear();
            var tmpRow;

            data.forEach(qSchool => { //temporary
                tmpRow = tableSchool.row.add([
                    qSchool.fullName,
                    qSchool.abbrv,
                    '<button class="btn btn-outline-success" style="vertical-align: middle;border-radius:50%" onclick="addSchoolData(event);" id="' + qSchool.schoolId + '"><b><i class="fa fa-plus" style="font-size: 17px;"></i></b></button>'
                ]).node()
                // tmpRow.id = qSchool.subjectCode; //letak id
            })
            tableSchool.draw();
            console.log(data)
        }
        ).catch(function (value) {
            console.log(value);
            tableSchool.clear();
            tableSchool.draw();
            try {
                value = JSON.parse(value)
                if (value.error) {
                    Swal.fire({
                        type: 'warning',
                        title: value.error
                    })
                }
            } catch {

            }
        });
    }


    function rtypeChange(e) {
        if (e.target.value == '2') {
            document.getElementById('selectSubject').disabled = false
        }
        else {
            document.getElementById('selectSubject').disabled = true
        }
        resetChartData()
    }

    function resetChartData() {
        console.log('redr')
        lineChartOption.series = null
        redrawChart()
    }

    function redrawChart() {
        console.log(lineChartOption)
        LineChart.setOption(lineChartOption, true)
    }
    window.addEventListener('resize', function () {
        setTimeout(function () {

            LineChart.resize()
        }, 500)
    });

    //chart stuff
    var data = [
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] },
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] },
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] },
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] },
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] },
        { '0000-04-10T20:40:33Z': [{ "1": 50 }, { "2": 80 }] }
    ];

    var data1 = [
        ['0000-05-10T20:40:33Z', 33],
        ['0000-08-10T20:40:53Z', 19],
        ['0000-08-10T20:44:03Z', 9],
        ['0000-09-10T20:41:03Z', 18],
        ['0000-04-10T20:45:03Z', 11]
    ]
    var data2 = [
        ['2021-05-20T20:40:33Z', 33, 'lbl'],
        ['2021-07-10T20:40:53Z', 19, 'lbl2'],
        ['2021-09-10T20:44:03Z', 50, 'lbl3'],
        ['2021-12-10T20:41:03Z', 55, 'lbl4'],
        ['2022-04-10T20:45:03Z', 22, 'lbl5']
    ]
    var data3 = [
        //3rd value letak assessment/student name
        ['2021-05-20T20:40:33Z', 13, 'testlabel'],
        ['2021-07-10T20:40:53Z', 19, '2dsad'],
        ['2021-09-10T20:44:03Z', 66, 'sdsadsa'],
        ['2021-12-10T20:41:03Z', 98, 'z2312'],
        ['2021-10T20:45:03Z', 33, 'czxcxz']
    ]

    var data = [
        ['2017-04-10T20:40:33Z', 1, 5, 99],
        ['2017-08-10T20:40:53Z', 2, 3, 20],
        ['2018-04-10T20:41:03Z', 4, null, 31],
        ['2018-08-10T20:44:03Z', 5, 1, 40],
        ['2019-04-10T20:45:03Z', 6, 0, 50]
    ];
    var lineChartOption = {
        legend: {
            // Try 'horizontal'
            type: 'scroll',
            orient: 'horizontal',
            right: 10
        }, grid: { containLabel: true },
        tooltip: {
            trigger: 'axis',
            formatter: function (d) {
                let ttip = ""
                d.forEach(s => {
                    console.log(s)
                    let spl = s.seriesName.split('\n')
                    ttip += '<u style="color:' + s.color + '"><b>' + spl[0] + "<br>" + spl[1] + "</u></b><br>Average: " + s.data[1].toFixed(2) + "%<br>Date Assessed: " + new Date(s.data[0]).toLocaleDateString('en-GB', { timeZone: "Asia/Kuala_Lumpur" }) + "<br>"
                })

                return ttip;

            }
        },
        grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
        },
        xAxis: {
            type: 'time'
        },
        yAxis: {
            type: 'value'
        },
        series: [/*
            {
                name: 'mine',
                type: 'line',
                smooth: true,
                data: data1
            },
            {
                name: 'lain panjang panjang nama',
                type: 'line',
                smooth: true,
                data: data2
            }*/
        ]
    }

    function newSeries(name, inpData, subj) {
        return {
            name: name + "\nSubject: " + subj,
            type: 'line',
            smooth: true,
            data: inpData
        }

    }

    //address

    function resetPostcode() {
        document.getElementById("SSPostcode").disabled = true;
        document.getElementById("SSPostcode").value = "";
        document.getElementById("idListPostcode").innerHTML = ""
        document.getElementById("idListPostcode").dataset.selected = "-1"
    }
    function resetArea() {
        document.getElementById("SSArea").disabled = true;
        document.getElementById("SSArea").value = "";
        document.getElementById("idListArea").innerHTML = ""
        document.getElementById("idListArea").dataset.selected = "-1"
    }

    function changePostcode(e) {
        if (e.target.value == '-1') {
            resetArea()
            return;
        }
        document.getElementById("SSArea").disabled = false;

        var postcode = document.getElementById(e.target.dataset.list).dataset.selected;
        getAreaInPostcode(postcode).then(function (result) {
            result = JSON.parse(result)
            var strhtml = ""
            result.forEach(area => {
                strhtml += '<li id="' + area.areaId + '">' + area.areaName + '</li>'
            });
            document.getElementById("idListArea").innerHTML = strhtml
        }).catch(function (err) {
            console.log(err)
        })
        console.log(postcode)
    }

    function changeState(e) {
        resetArea()
        resetPostcode()
        if (e.target.value == '-1') {
            return;
        }
        document.getElementById("SSPostcode").disabled = false;
        getPostcodes(e.target.value).then(function (result) {
            result = JSON.parse(result)
            var strhtml = ""
            result.forEach(pcode => {
                strhtml += '<li id="' + pcode.postcode + '">' + pcode.postcode + ' ' + pcode.postOffice + '</li>'
            });
            document.getElementById("idListPostcode").innerHTML = strhtml
        }).catch(function (err) {
            console.log(err)
        })
    }

</script>