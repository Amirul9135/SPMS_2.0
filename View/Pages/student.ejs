<style>
    button * {
        pointer-events: none;
    }

    .disabled_acc {
        background-color: rgba(255, 40, 40, 0.2) !important;
    }
</style>

<div class="side-app" onload="setup()">

    <!-- header -->
    <div class="row">
        <div class="col-md-10 col-xl-10">
            <h1 class="page-title mb-6" style="font-size: 30px;">Student</h1>
        </div>
    </div>
    <!-- /header -->

    <!-- filter -->
    <div class="row">
        <div class="col-md-12 col-xl-12">
            <div class="card">
                <div class="card-header text-white bg-info">
                    <h3 class="card-title">Find Student</h3>
                    <div class="card-options">
                        <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i
                                class="fe fe-chevron-up text-white"></i></a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label mt-0">School</label>
                                <div class="select-search">
                                    <input id="SSfschool" type="text" autocomplete="off" class="form-control"
                                        data-list="idListfSchool" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                        onblur="SSFocus(event)" onplay="fSchoolChange(event)">
                                    <ul onclick="SSItemClick(event)" id="idListfSchool" data-selected="-1">
                                        <% schoolList.forEach(s=>{ %>
                                            <li id="<%=s.schoolId%>" title="<%=s.fullName%>">
                                                <%=s.abbrv%>
                                            </li>
                                            <% }) %>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <label class="form-label mt-0">Class</label>
                                <div class="select-search">
                                    <input id="SSfclass" type="text" autocomplete="off" disabled class="form-control"
                                        data-list="LstFClass" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                        onblur="SSFocus(event)">
                                    <ul onclick="SSItemClick(event)" id="LstFClass" data-selected="-1">
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="row">
                                <div class="form-group">

                                    <label class="form-label mt-0">&nbsp;</label>
                                    <button onclick="loadStudent()" class="btn btn-pill btn-info-light"><b><i
                                                class="fa fa-search">&nbsp;Search</i></b></button>
                                </div>
                                <div class="form-group">

                                    <label class="form-label mt-0">&nbsp;</label>
                                    <button type="button" class="btn btn-pill btn-secondary-light"
                                        onclick="registerModal()"><i class="fa fa-plus mr-2"><b
                                                style="font-family: sans-serif;">&nbsp;Register</b></i></button>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /filter -->

    <!-- ROW-table -->
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">List of Student</h3>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover text-nowrap mb-0" id="StudTable">
                            <thead class="bg-primary">
                                <tr>
                                    <th width="50%" class="text-white">Student Name</th>
                                    <th width="20%" class="text-center text-white">School</th>
                                    <th width="20%" class="text-center text-white">Class</th>
                                    <th width="10%" class="text-center text-white"></th>
                                </tr>
                            </thead>
                            <tbody class="mycustom_tbd">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ROW-4 END -->
</div>


<!-- MODAL -->
<div class="modal fade" id="modal_studentForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content modal-md">
            <div class="modal-header bg-info">
                <h5 class="modal-title text-white" id="exampleModalLabel"><b>Student Registration</b></h5>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <div class="row">

                            <div class="col-lg-6 col-md-12">
                                <div class="form-group">
                                    <label for="exampleInputname">Name</label>
                                    <input type="text" class="form-control" id="txtname">
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12">
                                <div class="form-group">
                                    <label for="exampleInputnumber">I/C Number</label>
                                    <input type="text" class="form-control" id="txtstudentId">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-12">
                        <div class="row">

                            <div class="col-lg-6 col-md-12">
                                <div class="form-group">
                                    <label for="exampleInputnumber1">Phone Number</label>
                                    <input type="text" class="form-control" id="txtphone">
                                </div>
                            </div>

                            <div class="col-lg-6 col-md-12">
                                <div class="form-group">
                                    <label for="exampleInputEmail1">Email</label>
                                    <input type="email" class="form-control" id="txtemail">
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-lg-6 col-md-12">
                        <div class="form-group">
                            <label for="exampleInputnumber">Password</label>
                            <input type="password" class="form-control" id="txtpassword">
                        </div>
                    </div>


                    <!-- <div class="col-lg-12 col-md-12">
                        <hr style="width:100%;text-align:left;margin-left:0">
                    </div> -->

                    <!-- title -->
                    <!-- <div class="col-md-12 col-xl-12">
                        <h1 class="page-title mb-6" style="font-size: 18px;"> Maklumat Penjaga</h1>
                    </div> -->
                    <!-- title -->

                    <!-- <div class="col-lg-2 col-md-12">
                        <div class="form-group">
                            <label for="exampleInputnameid">I/C Penjaga</label>
                            <input type="text" class="form-control" id="txtguardianId">
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-12">
                        <div class="form-group">
                            <label for="exampleInputname1">Nama Penjaga</label>
                            <input type="text" class="form-control" id="txtguardianName">
                        </div>
                    </div> -->
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="exampleInputnumber">State</label>
                            <select id="selectState" class="form-control select2" onchange="changeState(event)">
                                <option value="-1">Choose State</option>
                                <% states.forEach(state=> {%>
                                    <option value="<%= state['state_code']%>">
                                        <%=state["state_name"]%>
                                    </option>
                                    <%});%>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="exampleInputnumber">Postcode</label>

                            <div class="select-search">
                                <input id="SSPostcode" type="text" autocomplete="off" disabled class="form-control"
                                    data-list="idListPostcode" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                    onblur="SSFocus(event)" onplay="changePostcode(event)">
                                <ul onclick="SSItemClick(event)" id="idListPostcode" data-selected="-1">
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <div class="form-group">
                            <label for="exampleInputnumber">Area</label>
                            <div class="select-search">
                                <input id="SSArea" type="text" autocomplete="off" disabled class="form-control"
                                    data-list="idListArea" onkeyup="SSKeyHandler(event)" onfocus="SSFocus(event)"
                                    onblur="SSFocus(event)">
                                <ul onclick="SSItemClick(event)" id="idListArea" data-selected="-1">
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="exampleInputnumber">Adress</label>
                            <input type="text" class="form-control" id="txtalamat" placeholder="Alamat" />
                        </div>
                    </div>

                </div>
            </div>

            <div class="modal-footer text-white" style="justify-content: center;">
                <a class="btn btn-warning mt-1" data-dismiss="modal">Cancel</a>
                <a class="btn btn-success mt-1" button onclick="registerStud()">Save</a>
                <span id="spnMsg"></span>
            </div>
        </div>
    </div>
</div>
<!-- MODAL CLOSED -->

<script>
    //initialize
    var tableStud;
    function setup() {
        tableStud = new DataTable("#StudTable")
    }

    function registerModal() {
        if (document.getElementById('LstFClass').dataset.selected == '-1') {
            Swal.fire({
                type: 'error',
                title: 'No class selected'
            })
            return
        }
        $('#modal_studentForm').modal('show')
    }

    async function registerStud() {

        var action = await Swal.fire({
            type: 'question',
            title: 'Confirm Registration',
            text: 'Register new student into the system?',
            showCancelButton: true
        })
        if (action.dismiss) {
            return;
        }

        //ni validation untuk check user dah pilih address
        var areaId = document.getElementById("idListArea").dataset.selected;
        if (areaId == "-1" || document.getElementById("txtalamat").value.length < 3) {
            Message.createNew("Warning", "Invalid address", 2)
            return false;
        }

        var name = document.getElementById("txtname").value;
        var studentId = document.getElementById("txtstudentId").value;
        var password = document.getElementById("txtpassword").value;
        var phone = document.getElementById("txtphone").value;
        var email = document.getElementById("txtemail").value;

        var data = {
            "name": name,
            "accountId": studentId,
            "password": password,
            "phone": phone,
            "email": email,
            "userType": 1
        }

        Server.request("POST", "/api/account/register", data, true).then(function (value) {
            console.log(value)
            Message.createNew("Success", "s", 0);
            document.getElementById("txtname").value = "";
            document.getElementById("txtstudentId").value = "";
            document.getElementById("txtpassword").value = "";
            document.getElementById("txtphone").value = "";
            document.getElementById("txtemail").value = "";
            submitAddress(studentId)//ni panggil function ak buat yg akan insertkan address ke address table guna id die
            $('#modal_studentForm').modal('hide');//ni auto tutup balek modal after register
            loadStudent()

        }).catch(function (value) {
            console.log(value);
            value = JSON.parse(value);
            if (value.hasOwnProperty("validationError")) {
                displayValidationError(value);
            }
            else {
                Message.createNew("Error", value, 3);
            }

        })
    }

    function fSchoolChange(e) {
        console.log(e.target.dataset.selected)
        Server.request('GET', '/api/school/classList?schId=' + e.target.dataset.selected, null, true).then(function (result) {
            result = JSON.parse(result)
            console.log(result)
            if (result.length == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No class in selected school'
                })
                tableStud.clear();
                tableStud.draw();
                document.getElementById('SSfclass').disabled = true
                return
            }
            var strhtml = ""
            result.forEach(cls => {
                strhtml += '<li id="' + cls.classId + '">' + cls.className + '</li>'
            })
            document.getElementById('LstFClass').innerHTML = strhtml
            document.getElementById('SSfclass').disabled = false
        }).catch(function (err) {
            console.log(err)
            Message.createNew("Error", "Failed to load class list in selected school", 3)
        })
    }
    //
    function loadStudent() {
        console.log("load")

        var school = document.getElementById("SSfschool").dataset.selected;
        var classId = document.getElementById("SSfclass").dataset.selected;

        console.log(school);


        Server.request("GET", "/api/account/allStudent?schoolId=" + school + "&classId=" + classId, null, true).then(function (value) {
            var data = JSON.parse(value);
            tableStud.clear();

            if (data.length == 0) {
                Swal.fire({
                    type: 'warning',
                    title: 'No data',
                    text: 'Currently There is no student in selected class'
                })
            }

            var tmpRow;
            data.forEach(student => { //temporary
                tmpRow = tableStud.row.add([
                    student.name + '<br><span>' + student.studentId + '</span>',
                    student.fullName,
                    student.className, (student.disabled == null) ? '<button onclick="deleteStud(event)" class="btn btn-danger"><b><i class="fa fa-trash  text-white" style="font-size: 17px;"></i></b></button>'
                        : '<button onclick="reActivateAcc(event)" class="btn btn-success"><b><i class="fa fa-check-circle  text-white" style="font-size: 17px;"></i></b></button>'

                ]).node()
                tmpRow.id = student.studentId; //letak id
                if (student.disabled) {
                    tmpRow.classList.add('disabled_acc')
                    tmpRow.title = "This account was disabled on " + new Date(student.disabled).toLocaleDateString('en-GB')
                }
            })
            tableStud.draw();
            console.log(data)
        }
        ).catch(function (value) {
            console.log(value);
        });
    }

    function showId(event) {
        console.log(event.target);
    }

    function resetPostcode() {
        document.getElementById("SSPostcode").disabled = true;
        document.getElementById("SSPostcode").value = "";
        document.getElementById("idListPostcode").innerHTML = ""
        document.getElementById("idListPostcode").dataset.selected = "-1"
    }
    function resetArea() {
        document.getElementById("SSArea").disabled = true;
        document.getElementById("SSArea").value = "";
        document.getElementById("idListArea").innerHTML = ""
        document.getElementById("idListArea").dataset.selected = "-1"
    }

    function changePostcode(e) {
        if (e.target.value == '-1') {
            resetArea()
            return;
        }
        document.getElementById("SSArea").disabled = false;

        var postcode = document.getElementById(e.target.dataset.list).dataset.selected;
        getAreaInPostcode(postcode).then(function (result) {
            result = JSON.parse(result)
            var strhtml = ""
            result.forEach(area => {
                strhtml += '<li id="' + area.areaId + '">' + area.areaName + '</li>'
            });
            document.getElementById("idListArea").innerHTML = strhtml
        }).catch(function (err) {
            console.log(err)
        })
        console.log(postcode)
    }

    function changeState(e) {
        resetArea()
        resetPostcode()
        if (e.target.value == '-1') {
            return;
        }
        document.getElementById("SSPostcode").disabled = false;
        getPostcodes(e.target.value).then(function (result) {
            result = JSON.parse(result)
            var strhtml = ""
            result.forEach(pcode => {
                strhtml += '<li id="' + pcode.postcode + '">' + pcode.postcode + ' ' + pcode.postOffice + '</li>'
            });
            document.getElementById("idListPostcode").innerHTML = strhtml
        }).catch(function (err) {
            console.log(err)
        })
    }

    function submitAddress(accountId) {
        var text = document.getElementById("txtalamat").value;
        var areaId = document.getElementById("idListArea").dataset.selected;
        if (areaId == "-1") {
            Message.createNew("Warning", "Invalid address", 2)
            return false;
        }
        areaId = parseInt(areaId);
        var address = {
            "accountId": accountId,
            "addressText": text,
            "areaId": areaId
        }
        Server.request("POST", "/api/address/set", address, true).then(function (result) {
            Message.createNew("success", "address saved", 0);
            return;
        }).catch(function (err) {
            Message.createNew("err", err, 3);
            return;
        })
    }

    function updatestud() {
        submitAddress()
        var data = {
            name: document.getElementById("txtname").value,
            phone: document.getElementById("txtphone").value,
            email: document.getElementById("txtEmail").value
        }

        Server.request("POST", "/api/account/update", data, true).then(
            function (value) {
                Message.createNew("Success", value, 0);
            }).catch(function (value) {
                value = JSON.parse(value);
                if (value.hasOwnProperty("validationError")) {
                    displayValidationError(value);
                }
                else {
                    Message.createNew("Error", value, 3);
                }
            })
    }

    async function reActivateAcc(e) {
        console.log(e.target.parentElement.parentElement.id)
        var chc = await Swal.fire({
            type: 'question',
            title: 'Re-Activate Account',
            html: 'Account Id : ' + e.target.parentElement.parentElement.id + '<br>' + e.target.parentElement.parentElement.title
        })
        if (chc.dismiss) {
            return
        }
        Server.request("POST", "/api/account/activate?accountId=" + e.target.parentElement.parentElement.id, null, true).then(function (result) {
            Swal.fire({
                type: 'success',
                title: 'account enabled'
            })
            loadStudent()
        }).catch(function (err) {
            Message.createNew("Error", "Unable to activate account", 3);

        })
    }

    async function deleteStud(event) {

        var action = await Swal.fire({
            type: 'question',
            title: 'Delete Student?',
            text: 'This student will be removed from the system',
            showCancelButton: true
        })
        if (action.dismiss) {
            return;
        }
        var data = {
            "accountId": event.target.parentElement.parentElement.id
        }

        Server.request("POST", "/api/account/delete", data, true).then(function (value) {
            Message.createNew("Disabled", "Student account has been disabled", 1);
            loadStudent()

        }).catch(function (value) {
            console.log(value)
        })
    }
    //loadStudent()
</script>